/**
 * HospitalRunFHIRAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const Extension = require('../lib/Models/Extension');
const Element = require('../lib/Models/Element');
const Address = require('../lib/Models/Address');
const Period = require('../lib/Models/Period');
const Quantity = require('../lib/Models/Quantity');
const Annotation = require('../lib/Models/Annotation');
const Reference = require('../lib/Models/Reference');
const Attachment = require('../lib/Models/Attachment');
const BackboneElement = require('../lib/Models/BackboneElement');
const Coding = require('../lib/Models/Coding');
const CodeableConcept = require('../lib/Models/CodeableConcept');
const Conformance = require('../lib/Models/Conformance');
const DomainResource = require('../lib/Models/DomainResource');
const Resource = require('../lib/Models/Resource');
const Meta = require('../lib/Models/Meta');
const Narrative = require('../lib/Models/Narrative');
const ContactItem = require('../lib/Models/ContactItem');
const ContactPoint = require('../lib/Models/ContactPoint');
const Software = require('../lib/Models/Software');
const Implementation = require('../lib/Models/Implementation');
const RestItem = require('../lib/Models/RestItem');
const Security = require('../lib/Models/Security');
const CertificateItem = require('../lib/Models/CertificateItem');
const ResourceItem = require('../lib/Models/ResourceItem');
const InteractionItem = require('../lib/Models/InteractionItem');
const SearchParamItem = require('../lib/Models/SearchParamItem');
const InteractionItem127 = require('../lib/Models/InteractionItem127');
const OperationItem = require('../lib/Models/OperationItem');
const MessagingItem = require('../lib/Models/MessagingItem');
const EndpointItem = require('../lib/Models/EndpointItem');
const EventItem = require('../lib/Models/EventItem');
const DocumentItem = require('../lib/Models/DocumentItem');
const HumanName = require('../lib/Models/HumanName');
const Identifier = require('../lib/Models/Identifier');
const Range = require('../lib/Models/Range');
const Ratio = require('../lib/Models/Ratio');
const SampledData = require('../lib/Models/SampledData');
const Signature = require('../lib/Models/Signature');
const Timing = require('../lib/Models/Timing');
const Repeat = require('../lib/Models/Repeat');
const Appointment = require('../lib/Models/Appointment');
const ParticipantItem = require('../lib/Models/ParticipantItem');
const AllergyIntolerance = require('../lib/Models/AllergyIntolerance');
const ReactionItem = require('../lib/Models/ReactionItem');
const Condition = require('../lib/Models/Condition');
const Stage = require('../lib/Models/Stage');
const EvidenceItem = require('../lib/Models/EvidenceItem');
const MedicationOrder = require('../lib/Models/MedicationOrder');
const DosageInstructionItem = require('../lib/Models/DosageInstructionItem');
const DispenseRequest = require('../lib/Models/DispenseRequest');
const Substitution = require('../lib/Models/Substitution');
const Observation = require('../lib/Models/Observation');
const ReferenceRangeItem = require('../lib/Models/ReferenceRangeItem');
const RelatedItem = require('../lib/Models/RelatedItem');
const ComponentItem = require('../lib/Models/ComponentItem');
const Patient = require('../lib/Models/Patient');
const ContactItem796 = require('../lib/Models/ContactItem796');
const Animal = require('../lib/Models/Animal');
const CommunicationItem = require('../lib/Models/CommunicationItem');
const Link = require('../lib/Models/Link');
const Entry = require('../lib/Models/Entry');
const LinkItem = require('../lib/Models/LinkItem');
const Search = require('../lib/Models/Search');
const Request = require('../lib/Models/Request');
const Response = require('../lib/Models/Response');
const AppointmentEntry = require('../lib/Models/AppointmentEntry');
const AllergyIntoleranceEntry = require('../lib/Models/AllergyIntoleranceEntry');
const ConditionEntry = require('../lib/Models/ConditionEntry');
const MedicationOrderEntry = require('../lib/Models/MedicationOrderEntry');
const ObservationEntry = require('../lib/Models/ObservationEntry');
const PatientEntry = require('../lib/Models/PatientEntry');
const Bundle = require('../lib/Models/Bundle');
const AppointmentBundle = require('../lib/Models/AppointmentBundle');
const AllergyIntoleranceBundle = require('../lib/Models/AllergyIntoleranceBundle');
const ConditionBundle = require('../lib/Models/ConditionBundle');
const MedicationOrderBundle = require('../lib/Models/MedicationOrderBundle');
const ObservationBundle = require('../lib/Models/ObservationBundle');
const PatientBundle = require('../lib/Models/PatientBundle');

const classMap = {
    Extension,
    Element,
    Address,
    Period,
    Quantity,
    Annotation,
    Reference,
    Attachment,
    BackboneElement,
    Coding,
    CodeableConcept,
    Conformance,
    DomainResource,
    Resource,
    Meta,
    Narrative,
    ContactItem,
    ContactPoint,
    Software,
    Implementation,
    RestItem,
    Security,
    CertificateItem,
    ResourceItem,
    InteractionItem,
    SearchParamItem,
    InteractionItem127,
    OperationItem,
    MessagingItem,
    EndpointItem,
    EventItem,
    DocumentItem,
    HumanName,
    Identifier,
    Range,
    Ratio,
    SampledData,
    Signature,
    Timing,
    Repeat,
    Appointment,
    ParticipantItem,
    AllergyIntolerance,
    ReactionItem,
    Condition,
    Stage,
    EvidenceItem,
    MedicationOrder,
    DosageInstructionItem,
    DispenseRequest,
    Substitution,
    Observation,
    ReferenceRangeItem,
    RelatedItem,
    ComponentItem,
    Patient,
    ContactItem796,
    Animal,
    CommunicationItem,
    Link,
    Entry,
    LinkItem,
    Search,
    Request,
    Response,
    AppointmentEntry,
    AllergyIntoleranceEntry,
    ConditionEntry,
    MedicationOrderEntry,
    ObservationEntry,
    PatientEntry,
    Bundle,
    AppointmentBundle,
    AllergyIntoleranceBundle,
    ConditionBundle,
    MedicationOrderBundle,
    ObservationBundle,
    PatientBundle,
};

/**
 * Factory class to create instances of models and exception classes
 */
class ModelFactory {
    /**
     * Creates instance of a model class
     * @param  modelName  {string}  Name of class to instantiate
     * @returns  {object} Instance of the model class
     */
    static getInstance(modelName) {
        return new classMap[modelName]();
    }
}

module.exports = ModelFactory;
