/**
 * HospitalRunFHIRAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const BackboneElement = require('./BackboneElement');

/**
 * Creates an instance of ReactionItem
 */
class ReactionItem extends BackboneElement {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.manifestation = this.constructor.getValue(obj.manifestation);
        this.substance = this.constructor.getValue(obj.substance);
        this.certainty = this.constructor.getValue(obj.certainty);
        this.description = this.constructor.getValue(obj.description);
        this.onset = this.constructor.getValue(obj.onset);
        this.severity = this.constructor.getValue(obj.severity);
        this.exposureRoute = this.constructor.getValue(obj.exposureRoute);
        this.note = this.constructor.getValue(obj.note);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            {
                name: 'manifestation',
                realName: 'manifestation',
                array: true,
                type: 'CodeableConcept',
            },
            { name: 'substance', realName: 'substance', type: 'CodeableConcept' },
            { name: 'certainty', realName: 'certainty' },
            { name: 'description', realName: 'description' },
            { name: 'onset', realName: 'onset', isDateTime: true, dateTimeValue: 'rfc3339' },
            { name: 'severity', realName: 'severity' },
            { name: 'exposureRoute', realName: 'exposureRoute', type: 'CodeableConcept' },
            { name: 'note', realName: 'note', type: 'Annotation' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {
        };
    }
}

module.exports = ReactionItem;
