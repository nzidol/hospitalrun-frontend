/**
 * HospitalRunFHIRAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const BackboneElement = require('./BackboneElement');

/**
 * Creates an instance of RestItem
 */
class RestItem extends BackboneElement {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.mode = this.constructor.getValue(obj.mode);
        this.resource = this.constructor.getValue(obj.resource);
        this.documentation = this.constructor.getValue(obj.documentation);
        this.security = this.constructor.getValue(obj.security);
        this.interaction = this.constructor.getValue(obj.interaction);
        this.transactionMode = this.constructor.getValue(obj.transactionMode);
        this.searchParam = this.constructor.getValue(obj.searchParam);
        this.operation = this.constructor.getValue(obj.operation);
        this.compartment = this.constructor.getValue(obj.compartment);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'mode', realName: 'mode' },
            { name: 'resource', realName: 'resource', array: true, type: 'ResourceItem' },
            { name: 'documentation', realName: 'documentation' },
            { name: 'security', realName: 'security', type: 'Security' },
            {
                name: 'interaction',
                realName: 'interaction',
                array: true,
                type: 'InteractionItem127',
            },
            { name: 'transactionMode', realName: 'transactionMode' },
            { name: 'searchParam', realName: 'searchParam', array: true, type: 'SearchParamItem' },
            { name: 'operation', realName: 'operation', array: true, type: 'OperationItem' },
            { name: 'compartment', realName: 'compartment', array: true },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {
        };
    }
}

module.exports = RestItem;
