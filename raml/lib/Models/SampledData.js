/**
 * HospitalRunFHIRAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const Element = require('./Element');

/**
 * Creates an instance of SampledData
 */
class SampledData extends Element {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.origin = this.constructor.getValue(obj.origin);
        this.period = this.constructor.getValue(obj.period);
        this.dimensions = this.constructor.getValue(obj.dimensions);
        this.data = this.constructor.getValue(obj.data);
        this.factor = this.constructor.getValue(obj.factor);
        this.lowerLimit = this.constructor.getValue(obj.lowerLimit);
        this.upperLimit = this.constructor.getValue(obj.upperLimit);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'origin', realName: 'origin', type: 'Quantity' },
            { name: 'period', realName: 'period' },
            { name: 'dimensions', realName: 'dimensions' },
            { name: 'data', realName: 'data' },
            { name: 'factor', realName: 'factor' },
            { name: 'lowerLimit', realName: 'lowerLimit' },
            { name: 'upperLimit', realName: 'upperLimit' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {
        };
    }
}

module.exports = SampledData;
