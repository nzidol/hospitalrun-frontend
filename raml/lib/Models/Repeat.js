/**
 * HospitalRunFHIRAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const Element = require('./Element');

/**
 * Creates an instance of Repeat
 */
class Repeat extends Element {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.bounds = this.constructor.getValue(obj.bounds);
        this.count = this.constructor.getValue(obj.count);
        this.duration = this.constructor.getValue(obj.duration);
        this.durationMax = this.constructor.getValue(obj.durationMax);
        this.durationUnits = this.constructor.getValue(obj.durationUnits);
        this.frequency = this.constructor.getValue(obj.frequency);
        this.frequencyMax = this.constructor.getValue(obj.frequencyMax);
        this.period = this.constructor.getValue(obj.period);
        this.periodMax = this.constructor.getValue(obj.periodMax);
        this.periodUnits = this.constructor.getValue(obj.periodUnits);
        this.when = this.constructor.getValue(obj.when);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'bounds', realName: 'bounds' },
            { name: 'count', realName: 'count' },
            { name: 'duration', realName: 'duration' },
            { name: 'durationMax', realName: 'durationMax' },
            { name: 'durationUnits', realName: 'durationUnits' },
            { name: 'frequency', realName: 'frequency' },
            { name: 'frequencyMax', realName: 'frequencyMax' },
            { name: 'period', realName: 'period' },
            { name: 'periodMax', realName: 'periodMax' },
            { name: 'periodUnits', realName: 'periodUnits' },
            { name: 'when', realName: 'when' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {
        };
    }
}

module.exports = Repeat;
