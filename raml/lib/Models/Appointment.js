/**
 * HospitalRunFHIRAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const DomainResource = require('./DomainResource');

/**
 * Creates an instance of Appointment
 */
class Appointment extends DomainResource {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.status = this.constructor.getValue(obj.status);
        this.participant = this.constructor.getValue(obj.participant);
        this.identifier = this.constructor.getValue(obj.identifier);
        this.type = this.constructor.getValue(obj.type);
        this.reason = this.constructor.getValue(obj.reason);
        this.priority = this.constructor.getValue(obj.priority);
        this.description = this.constructor.getValue(obj.description);
        this.start = this.constructor.getValue(obj.start);
        this.end = this.constructor.getValue(obj.end);
        this.minutesDuration = this.constructor.getValue(obj.minutesDuration);
        this.slot = this.constructor.getValue(obj.slot);
        this.comment = this.constructor.getValue(obj.comment);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'status', realName: 'status' },
            { name: 'participant', realName: 'participant', array: true, type: 'ParticipantItem' },
            { name: 'identifier', realName: 'identifier', array: true, type: 'Identifier' },
            { name: 'type', realName: 'type', type: 'CodeableConcept' },
            { name: 'reason', realName: 'reason', type: 'CodeableConcept' },
            { name: 'priority', realName: 'priority' },
            { name: 'description', realName: 'description' },
            { name: 'start', realName: 'start' },
            { name: 'end', realName: 'end' },
            { name: 'minutesDuration', realName: 'minutesDuration' },
            { name: 'slot', realName: 'slot', array: true, type: 'Reference' },
            { name: 'comment', realName: 'comment' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {
        };
    }
}

module.exports = Appointment;
