/**
 * HospitalRunFHIRAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const BackboneElement = require('./BackboneElement');

/**
 * Creates an instance of DispenseRequest
 */
class DispenseRequest extends BackboneElement {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.medication = this.constructor.getValue(obj.medication);
        this.validityPeriod = this.constructor.getValue(obj.validityPeriod);
        this.numberOfRepeatsAllowed = this.constructor.getValue(obj.numberOfRepeatsAllowed);
        this.quantity = this.constructor.getValue(obj.quantity);
        this.expectedSupplyDuration = this.constructor.getValue(obj.expectedSupplyDuration);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'medication', realName: 'medication' },
            { name: 'validityPeriod', realName: 'validityPeriod', type: 'Period' },
            { name: 'numberOfRepeatsAllowed', realName: 'numberOfRepeatsAllowed' },
            { name: 'quantity', realName: 'quantity', type: 'Quantity' },
            {
                name: 'expectedSupplyDuration',
                realName: 'expectedSupplyDuration',
                type: 'Quantity',
            },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {
        };
    }
}

module.exports = DispenseRequest;
