/**
 * HospitalRunFHIRAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const BackboneElement = require('./BackboneElement');

/**
 * Creates an instance of ComponentItem
 */
class ComponentItem extends BackboneElement {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.code = this.constructor.getValue(obj.code);
        this.dataAbsentReason = this.constructor.getValue(obj.dataAbsentReason);
        this.referenceRange = this.constructor.getValue(obj.referenceRange);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'code', realName: 'code' },
            { name: 'dataAbsentReason', realName: 'dataAbsentReason', type: 'CodeableConcept' },
            {
                name: 'referenceRange',
                realName: 'referenceRange',
                array: true,
                type: 'ReferenceRangeItem',
            },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {
        };
    }
}

module.exports = ComponentItem;
