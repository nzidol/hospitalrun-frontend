/**
 * HospitalRunFHIRAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const DomainResource = require('./DomainResource');

/**
 * Creates an instance of MedicationOrder
 */
class MedicationOrder extends DomainResource {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.reason = this.constructor.getValue(obj.reason);
        this.medication = this.constructor.getValue(obj.medication);
        this.identifier = this.constructor.getValue(obj.identifier);
        this.dateWritten = this.constructor.getValue(obj.dateWritten);
        this.status = this.constructor.getValue(obj.status);
        this.dateEnded = this.constructor.getValue(obj.dateEnded);
        this.reasonEnded = this.constructor.getValue(obj.reasonEnded);
        this.patient = this.constructor.getValue(obj.patient);
        this.prescriber = this.constructor.getValue(obj.prescriber);
        this.encounter = this.constructor.getValue(obj.encounter);
        this.note = this.constructor.getValue(obj.note);
        this.dosageInstruction = this.constructor.getValue(obj.dosageInstruction);
        this.dispenseRequest = this.constructor.getValue(obj.dispenseRequest);
        this.substitution = this.constructor.getValue(obj.substitution);
        this.priorPrescription = this.constructor.getValue(obj.priorPrescription);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'reason', realName: 'reason' },
            { name: 'medication', realName: 'medication', type: 'CodeableConcept' },
            { name: 'identifier', realName: 'identifier', array: true, type: 'Identifier' },
            {
                name: 'dateWritten',
                realName: 'dateWritten',
                isDateTime: true,
                dateTimeValue: 'rfc3339',
            },
            { name: 'status', realName: 'status' },
            {
                name: 'dateEnded',
                realName: 'dateEnded',
                isDateTime: true,
                dateTimeValue: 'rfc3339',
            },
            { name: 'reasonEnded', realName: 'reasonEnded', type: 'CodeableConcept' },
            { name: 'patient', realName: 'patient', type: 'Reference' },
            { name: 'prescriber', realName: 'prescriber', type: 'Reference' },
            { name: 'encounter', realName: 'encounter', type: 'Reference' },
            { name: 'note', realName: 'note' },
            {
                name: 'dosageInstruction',
                realName: 'dosageInstruction',
                array: true,
                type: 'DosageInstructionItem',
            },
            { name: 'dispenseRequest', realName: 'dispenseRequest', type: 'DispenseRequest' },
            { name: 'substitution', realName: 'substitution', type: 'Substitution' },
            { name: 'priorPrescription', realName: 'priorPrescription', type: 'Reference' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {
        };
    }
}

module.exports = MedicationOrder;
