/**
 * HospitalRunFHIRAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const DomainResource = require('./DomainResource');

/**
 * Creates an instance of AllergyIntolerance
 */
class AllergyIntolerance extends DomainResource {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.patient = this.constructor.getValue(obj.patient);
        this.substance = this.constructor.getValue(obj.substance);
        this.identifier = this.constructor.getValue(obj.identifier);
        this.onset = this.constructor.getValue(obj.onset);
        this.recordedDate = this.constructor.getValue(obj.recordedDate);
        this.recorder = this.constructor.getValue(obj.recorder);
        this.reporter = this.constructor.getValue(obj.reporter);
        this.status = this.constructor.getValue(obj.status);
        this.criticality = this.constructor.getValue(obj.criticality);
        this.type = this.constructor.getValue(obj.type);
        this.category = this.constructor.getValue(obj.category);
        this.lastOccurence = this.constructor.getValue(obj.lastOccurence);
        this.note = this.constructor.getValue(obj.note);
        this.reaction = this.constructor.getValue(obj.reaction);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'patient', realName: 'patient', type: 'Reference' },
            { name: 'substance', realName: 'substance', type: 'CodeableConcept' },
            { name: 'identifier', realName: 'identifier', array: true, type: 'Identifier' },
            { name: 'onset', realName: 'onset', isDateTime: true, dateTimeValue: 'rfc3339' },
            {
                name: 'recordedDate',
                realName: 'recordedDate',
                isDateTime: true,
                dateTimeValue: 'rfc3339',
            },
            { name: 'recorder', realName: 'recorder', type: 'Reference' },
            { name: 'reporter', realName: 'reporter', type: 'Reference' },
            { name: 'status', realName: 'status' },
            { name: 'criticality', realName: 'criticality' },
            { name: 'type', realName: 'type' },
            { name: 'category', realName: 'category' },
            {
                name: 'lastOccurence',
                realName: 'lastOccurence',
                isDateTime: true,
                dateTimeValue: 'rfc3339',
            },
            { name: 'note', realName: 'note', type: 'Annotation' },
            { name: 'reaction', realName: 'reaction', array: true, type: 'ReactionItem' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {
        };
    }
}

module.exports = AllergyIntolerance;
