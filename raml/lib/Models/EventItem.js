/**
 * HospitalRunFHIRAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const BackboneElement = require('./BackboneElement');

/**
 * Creates an instance of EventItem
 */
class EventItem extends BackboneElement {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.code = this.constructor.getValue(obj.code);
        this.mode = this.constructor.getValue(obj.mode);
        this.focus = this.constructor.getValue(obj.focus);
        this.request = this.constructor.getValue(obj.request);
        this.response = this.constructor.getValue(obj.response);
        this.category = this.constructor.getValue(obj.category);
        this.documentation = this.constructor.getValue(obj.documentation);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'code', realName: 'code', type: 'Coding' },
            { name: 'mode', realName: 'mode' },
            { name: 'focus', realName: 'focus' },
            { name: 'request', realName: 'request', type: 'Reference' },
            { name: 'response', realName: 'response', type: 'Reference' },
            { name: 'category', realName: 'category' },
            { name: 'documentation', realName: 'documentation' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {
        };
    }
}

module.exports = EventItem;
