/**
 * HospitalRunFHIRAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

'use strict';

const BackboneElement = require('./BackboneElement');

/**
 * Creates an instance of ReferenceRangeItem
 */
class ReferenceRangeItem extends BackboneElement {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.low = this.constructor.getValue(obj.low);
        this.high = this.constructor.getValue(obj.high);
        this.meaning = this.constructor.getValue(obj.meaning);
        this.age = this.constructor.getValue(obj.age);
        this.text = this.constructor.getValue(obj.text);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'low', realName: 'low', type: 'Quantity' },
            { name: 'high', realName: 'high', type: 'Quantity' },
            { name: 'meaning', realName: 'meaning', type: 'CodeableConcept' },
            { name: 'age', realName: 'age', type: 'Range' },
            { name: 'text', realName: 'text' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {
        };
    }
}

module.exports = ReferenceRangeItem;
